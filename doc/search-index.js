var searchIndex = JSON.parse('{\
"baum":{"doc":"","t":"NDNNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLFLLLLLLLLLLLLL","n":["CantRemoveRoot","Cursor","NoParent","NoSuchNodeInternal","NoSuchNodeUser","Tree","TreeError","add_child","add_child","add_child_and_go_down","add_tree_as_child","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","change_value","children","deserialize","destroy","div","eq","fmt","from","from","from","get_children","get_parent","get_root","get_value","go_up","index","into","into","into","is_on_root","move_node","new","new","new_at_root","nodes","remove_entry","root","root_value","serialize","set_value","tr","traverse","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value","value_mut","value_mut"],"q":[[0,"baum"],[61,"core::result"],[62,"alloc::vec"],[63,"serde::de"],[64,"serde::de"],[65,"core::fmt"],[66,"core::fmt"],[67,"serde::ser"]],"d":["","The cursor is a helper struct for operating on the tree …","","","","Tree structure","","Adds a new child to the current node but keeps the cursor …","Adds a child with the passed value to the parent node with …","Adds a new child to the current node and moves the cursor …","Adds a whole other tree as a child to the node provided as …","","","","","","","Puts the given value in place of the current position of …","Returns the values of all childrens in a vector.","","Destroys the cursor by consuming it and returns the index …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns all indices of the children of the provided node …","Returns the parent node index of the given node index.","Retrieves the index of the root node of the tree.","Returns the value of the given node index.","Moves the cursor up to the parent of the current node.","Retrieves the current index of the cursor position.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks whether or not the cursor is on the root node.","Moves the node at given index to the spot defined by the …","Creates a new cursor for the given tree at the position of …","A tree constructor. A tree can never be fully empty (use …","Creates a new cursor for the given tree at the root of the …","","Removes a child of the given index. Since any node in a …","","","","Sets the value of the given node index.","<code>tr</code> creates a tree consisting only of the root node in …","Traverses the tree.","","","","","","","","","","Retrieves the value of the cursor at the current point.","Adds a new child to the current node but keeps the cursor …",""],"i":[4,0,4,4,4,0,0,1,3,1,3,1,4,3,1,4,3,1,1,3,1,3,3,4,1,4,3,3,3,3,3,1,1,1,4,3,1,3,1,3,1,3,3,3,3,3,3,0,3,1,4,3,1,4,3,1,4,3,1,1,3],"f":[0,0,0,0,0,0,0,[[[1,[-1]],-1],2,[]],[[[3,[-1]],2,-1],[[5,[2,4]]],[]],[[[1,[-1]],-1],2,[]],[[[3,[-1]],[3,[-1]],2],[[5,[6,4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]],-1],6,[]],[[[1,[-1]]],[[7,[[6,[-1,2]]]]],[]],[-1,[[5,[[3,[-2]]]]],8,9],[[[1,[-1]]],2,[]],[[[3,[-1]],[3,[-1]]],[],[]],[[[3,[-1]],[3,[-1]]],10,11],[[4,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[3,[-1]],2],[[5,[[7,[2]],4]]],[]],[[[3,[-1]],2],[[5,[2,4]]],[]],[[[3,[-1]]],2,[]],[[[3,[-1]],2],[[5,[-1,4]]],[]],[[[1,[-1]]],6,[]],[[[1,[-1]]],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],10,[]],[[[3,[-1]],2,14],[[5,[6,4]]],[]],[[[3,[-1]],2],[[5,[[1,[-1]],4]]],[]],[-1,[[3,[-1]]],[]],[[[3,[-1]]],[[1,[-1]]],[]],0,[[[3,[-1]],2],[[5,[6,4]]],[]],0,[[[3,[-1]]],-1,[]],[[[3,[-1]],-2],5,15,16],[[[3,[-1]],2,-1],[[5,[6,4]]],[]],[-1,[[3,[-1]]],[]],[[[3,[-1]]],[[7,[2]]],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[[1,[-1]]],-1,[]],[[[1,[-1]]],-1,[]],[[[3,[-1]],2],[[5,[-1,4]]],[]]],"c":[],"p":[[3,"Cursor",0],[15,"usize"],[3,"Tree",0],[4,"TreeError",0],[4,"Result",61],[15,"tuple"],[3,"Vec",62],[8,"Deserializer",63],[8,"Deserialize",63],[15,"bool"],[8,"PartialEq",64],[3,"Formatter",65],[6,"Result",65],[15,"isize"],[8,"Serialize",66],[8,"Serializer",66],[3,"TypeId",67]]},\
"common":{"doc":"","t":"SDDSDDSMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLMML","n":["BLACK","Color","Position","RED","Rectangle","Size","TRANSPARENT","a","add","add","add_assign","b","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounding","bounding_all","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","describe","describe","describe","deserialize","deserialize","deserialize","distance_to","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_abi","from_abi","from_abi","g","hash","height","init","init","init","init","interpolate","intersect","intersectn","into","into","into","into","into_abi","into_abi","into_abi","is_none","is_none","is_none","long_ref_from_abi","long_ref_from_abi","long_ref_from_abi","new","new","new","none","none","none","of","points","position","r","ref_from_abi","ref_from_abi","ref_from_abi","ref_mut_from_abi","ref_mut_from_abi","ref_mut_from_abi","return_abi","return_abi","return_abi","serialize","serialize","serialize","size","sub","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","width","with_added_alpha","with_alpha","x","y","zero"],"q":[[0,"common"],[149,"alloc::vec"],[150,"core::result"],[151,"serde::de"],[152,"core::fmt"],[153,"core::fmt"],[154,"core::hash"],[155,"serde::ser"],[156,"alloc::string"],[157,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","All points of the rectangle in global coordinates","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[5,0,0,5,0,0,5,5,1,2,1,5,5,1,2,6,5,1,2,6,2,2,5,1,2,6,5,1,2,6,5,1,2,6,5,1,2,6,5,1,6,5,1,6,1,5,1,2,6,5,1,2,6,1,5,5,1,1,2,2,6,6,5,5,1,1,2,2,2,6,6,5,1,6,5,1,6,5,1,2,6,1,2,2,5,1,2,6,5,1,6,5,1,6,5,1,6,1,2,6,5,1,6,2,2,2,5,5,1,6,5,1,6,5,1,6,5,1,6,2,1,2,1,5,1,2,6,5,1,2,6,5,1,2,6,5,1,2,6,5,1,2,6,6,5,5,1,1,1],"f":[0,0,0,0,0,0,0,0,[[1,1]],[[2,1]],[[1,1],3],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,2],2],[[[4,[2]]],2],[5,5],[1,1],[2,2],[6,6],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[],3],[[],3],[[],3],[-1,[[8,[5]]],9],[-1,[[8,[1]]],9],[-1,[[8,[6]]],9],[[1,1],10],[7,3],[7,3],[7,3],[7,3],[[5,5],11],[[1,1],11],[[2,2],11],[[6,6],11],[[-1,-2],11,[],[]],[[5,12],13],[[5,12],13],[[1,12],13],[[1,12],13],[[2,12],13],[[2,12],13],[[6,12],13],[[6,12],13],[[[15,[14]]],5],[-1,-1,[]],[[[3,[16,16]]],1],[-1,-1,[]],[[[4,[2]]],2],[[[3,[16,16,17,17]]],2],[-1,-1,[]],[-1,-1,[]],[[[3,[17,17]]],6],[17,5],[17,1],[17,6],0,[[1,-1],3,18],0,[[],7],[[],7],[[],7],[[],7],[[1,1],[[4,[1]]]],[[2,2],2],[[[19,[2]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,17],[1,17],[6,17],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[16,16],1],[[16,16,17,17],2],[[17,17],6],[[]],[[]],[[]],[[1,6],2],[2,[[4,[1]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[[5,-1],8,20],[[1,-1],8,20],[[6,-1],8,20],0,[[1,1]],[[2,1]],[[1,1],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,[[5,14],5],[[5,14],5],0,0,[[],1]],"c":[],"p":[[3,"Position",0],[3,"Rectangle",0],[15,"tuple"],[3,"Vec",149],[3,"Color",0],[3,"Size",0],[15,"usize"],[4,"Result",150],[8,"Deserializer",151],[15,"f64"],[15,"bool"],[3,"Formatter",152],[6,"Result",152],[15,"u8"],[3,"Rgba",153],[15,"i32"],[15,"u32"],[8,"Hasher",154],[15,"slice"],[8,"Serializer",155],[3,"String",156],[3,"TypeId",157]]},\
"common_ui":{"doc":"","t":"DDDDLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMMLL","n":["CanvasDisplay","Coordinate","Position","Size","add","add_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canvas_size","center","clone","clone","clone","clone_into","clone_into","clone_into","constructor","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","describe","describe","deserialize","deserialize","distance_to","drop","drop","drop","drop","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_abi","from_abi","from_abi","from_abi","gap","hash","height","img_size","init","init","init","init","initial","interpolate","into","into","into","into","into_abi","into_abi","into_abi","into_abi","is_none","is_none","is_none","is_none","long_ref_from_abi","long_ref_from_abi","long_ref_from_abi","long_ref_from_abi","move_relative","new","new","none","none","none","none","position","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_mut_from_abi","ref_mut_from_abi","ref_mut_from_abi","ref_mut_from_abi","return_abi","return_abi","return_abi","return_abi","scale","serialize","serialize","set_canvas_size","set_img_size","sub","sub_assign","to_owned","to_owned","to_owned","to_string","to_string","translate_position","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","width","x","y","zero","zoom_at_position"],"q":[[0,"common_ui"],[133,"core::result"],[134,"serde::de"],[135,"core::fmt"],[136,"core::fmt"],[137,"alloc::alloc"],[138,"alloc::vec"],[139,"serde::ser"],[140,"alloc::string"],[141,"core::any"]],"d":["All coordinates and sizes in this context are always in …","","","","","","","","","","","","","","","Centers the image on the canvas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The point (<code>x</code>, <code>y</code>) at which is being zoomed should stay at …"],"i":[0,0,0,0,1,1,14,3,1,4,14,3,1,4,3,3,3,1,4,3,1,4,3,14,3,1,4,14,3,1,4,14,3,1,4,1,14,3,1,4,1,4,1,1,1,4,4,14,3,1,1,4,4,14,3,1,4,3,1,4,3,14,3,1,4,3,1,14,3,1,4,14,3,1,4,14,3,1,4,14,3,1,4,3,1,4,14,3,1,4,3,14,3,1,4,14,3,1,4,14,3,1,4,3,1,4,3,3,1,1,3,1,4,1,4,3,14,3,1,4,14,3,1,4,14,3,1,4,4,1,1,1,3],"f":[0,0,0,0,[[1,1]],[[1,1],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[3,2],[3,3],[1,1],[4,4],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[5,5,5,5,5],3],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[[],2],[[],2],[-1,[[7,[1]]],8],[-1,[[7,[4]]],8],[[1,1],9],[6,2],[6,2],[6,2],[6,2],[[1,1],10],[[4,4],10],[[-1,-2],10,[],[]],[[1,11],[[7,[2,12]]]],[[1,11],[[7,[2,12]]]],[[4,11],[[7,[2,12]]]],[[4,11],[[7,[2,12]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[2,[13,13]]],1],[[[2,[5,5]]],4],[-1,-1,[]],[5,14],[5,3],[5,1],[5,4],0,[[1,-1],2,15],0,0,[[],6],[[],6],[[],6],[[],6],[[4,4,5],3],[[1,1],[[17,[1,16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,5],[3,5],[1,5],[4,5],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[3,13,13],2],[[13,13],1],[[5,5],4],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],0,[[1,-1],7,18],[[4,-1],7,18],[[3,5,5],2],[[3,5,5],2],[[1,1]],[[1,1],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,19,[]],[-1,19,[]],[[3,9,9],14],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],0,0,0,[[],1],[[3,9,9,9],2]],"c":[],"p":[[3,"Position",0],[15,"tuple"],[3,"CanvasDisplay",0],[3,"Size",0],[15,"u32"],[15,"usize"],[4,"Result",133],[8,"Deserializer",134],[15,"f64"],[15,"bool"],[3,"Formatter",135],[3,"Error",135],[15,"i32"],[3,"Coordinate",0],[8,"Hasher",136],[3,"Global",137],[3,"Vec",138],[8,"Serializer",139],[3,"String",140],[3,"TypeId",141]]},\
"engine":{"doc":"","t":"NNNEINNNENNDDDDENNNNNNNNNNNNNNNNNDELLLLLLLLLLLLLLLLLLLLLKLLKLKLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLM","n":["Alpha","Base64Decode","Base64Png","BlendMode","Blender","Compound","Darken","DrawLine","DtoTransformError","EffectNoiseGaussian","EffectNoiseGrayscale","Engine","EngineError","Image","ImageDto","ImageSource","LayerAttributes","LayerCreateEmpty","LayerCreateFromData","LayerCreateGroup","LayerDuplicate","LayerFlip","LayerMergeDown","LayerMove","LayerMoveRelative","LayerRemove","Lighten","Multipart","Network","NoSuchPart","ProjectCreate","Remove","Screen","SoftwareBlender","Step","application_error","approx_from","approx_from","approx_from","approx_from","approx_from","approx_from","approx_from","approx_from","approx_from","approx_into","approx_into","approx_into","approx_into","approx_into","approx_into","approx_into","approx_into","approx_into","as_extendable","as_step","blend","blend","blend_all","blend_damaged","blend_damaged","blend_damaged_into","blend_damaged_into","blend_pixel","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clean","clean","clean","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","content_as_base64","content_as_png_bytes","data","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","draw_line","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_base64","eq","eq","eq","eq","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extend_step","finish_step","first_hit_layer","flip_horizontally","flip_vertically","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_base64","from_bytes","from_file","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","gaussian_noise","generate_blender","grayscale","height","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_array","into_bytes","into_png_bytes","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","load","load","log_debug","log_history","move_layer_down","move_layer_up","name","name","new","new","new","new_four_pixels","new_from_color","new_stamp","perform","perform_on","pixel","push_moment","put_pixel","reconstruct","redo","redoable","save","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_context_entry","size","size","src","start_step","switch_blender","to_image","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","undo","undoable","user_error","value_from","value_from","value_from","value_from","value_from","value_from","value_from","value_from","value_from","value_into","value_into","value_into","value_into","value_into","value_into","value_into","value_into","value_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","size"],"q":[[0,"engine"],[357,"engine::Step"],[358,"core::result"],[359,"alloc::boxed"],[360,"core::option"],[361,"common::rectangle"],[362,"common::position"],[363,"alloc::alloc"],[364,"alloc::vec"],[365,"image::color"],[366,"alloc::string"],[367,"serde::de"],[368,"image::error"],[369,"erased_serde::ser"],[370,"erased_serde::ser"],[371,"core::fmt"],[372,"core::fmt"],[373,"baum::tree"],[374,"core::error"],[375,"common::color"],[376,"std::collections::hash::map"],[377,"serde::ser"],[378,"common::size"],[379,"std::collections::hash::map"]],"d":["source-over","","","","A blender blends multiple images together (composition)","Represents multiple steps that should be performed as one …","darken","","","Gaussian noise","Gaussian noise","<code>Engine</code> keeps the whole state of a image editing session.","","This struct abstracts the implementation of the actual …","Represents an Image in a way that it can be serialized and …","","Set layer attributes","Creates a new empty layer","Creates a new layer given the content of the layer","Creates a new empty layer group","Duplicate a layer","Flip layer","Merge layer down","Move layer relative","Move layer relative","Removes layers by id","lighten","","","","Initializes a new project","destination-out","screen","","A StepData is a description of a single atomic …","","","","","","","","","","","","","","","","","","","","","","Blends <code>overlay</code> on top of <code>base</code> with the given mode, …","","Blends all given children based on their properties into …","Blends the active image on top of the base image by …","","Blends <code>overlay</code> on top of <code>base</code> with the given mode, …","","","","","","","","","","","","","","","","","","","","","","Cleans the cache and thus forgets all images that got …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws the stamp image at each position of the track on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Creates a new image with the content of the given image …","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Marks that the image with the given marker won’t change …","","","","","","Name of the blender","","","Creates a new empty image with the given size.","","Creates a 2x2 image using the given color strings (for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[7,33,21,0,0,4,7,4,0,4,4,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,7,21,33,33,4,7,7,0,0,2,14,7,21,22,33,9,20,2,4,14,7,21,22,33,9,20,2,4,4,4,39,14,39,39,14,39,14,14,14,7,21,22,33,9,20,2,4,14,7,21,22,33,9,20,2,4,20,39,14,9,7,21,22,9,4,7,21,22,9,4,20,20,22,14,14,7,21,22,33,9,20,2,4,14,7,21,22,33,9,20,2,4,7,21,22,9,2,4,9,14,7,21,22,33,9,20,2,4,9,7,21,9,2,21,7,21,22,9,20,2,4,20,20,20,9,9,7,21,22,33,9,9,2,2,4,14,7,21,22,33,9,20,2,2,2,2,4,9,9,9,14,7,21,22,33,9,20,2,4,9,0,9,9,14,7,21,22,33,9,20,2,4,14,7,21,22,33,9,20,2,4,9,9,9,14,7,21,22,33,9,20,2,4,39,14,4,20,20,20,39,14,14,9,20,9,9,9,20,4,9,20,9,20,20,20,9,7,21,22,9,20,2,4,20,9,20,22,20,20,22,7,21,22,9,4,9,2,14,7,21,22,33,9,20,2,4,14,7,21,22,33,9,20,2,4,14,14,7,7,21,21,22,22,33,33,9,9,20,20,2,2,4,4,14,14,7,7,21,21,22,22,33,33,9,9,20,20,2,2,4,4,14,7,21,22,33,9,20,2,4,20,20,2,14,7,21,22,33,9,20,2,4,14,7,21,22,33,9,20,2,4,14,7,21,22,33,9,20,2,4,9,47],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[4,[[6,[[5,[0]]]]]],[4,[[5,[0]]]],[[-1,7,8,[13,[9,10,11,[6,[12]]]],[13,[9,10,11,[6,[12]]]]],9,[]],[[14,7,8,[13,[9,10,11,[6,[12]]]],[13,[9,10,11,[6,[12]]]]],9],[[-1,8,[17,[[13,[7,9,10,11,15,[6,[12]]]],16]]],9,[]],[[-1,7,[13,[9,10,11]],[13,[9,10,11]],8],13,[]],[[14,7,[13,[9,10,11]],[13,[9,10,11]],8],13],[[-1,7,8,[13,[9,10]],[13,[9,10,11]],[13,[9,10,11]]],13,[]],[[14,7,8,[13,[9,10]],[13,[9,10,11]],[13,[9,10,11]]],13],[[7,[19,[18]],[19,[18]],11,11],[[19,[18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,[[17,[18]]]],[-1,13,[]],[14,13],[[9,8],13],[7,7],[21,21],[22,22],[9,9],[4,4],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[20,23],[20,[[17,[18]]]],0,[[],14],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[-1,[[3,[7]]],24],[-1,[[3,[21]]],24],[-1,[[3,[22]]],24],[-1,[[3,[9]]],24],[-1,[[3,[2]]],24],[-1,[[3,[4]]],24],[[9,9,[25,[10]]],8],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[9,[[3,[23,26]]]],[[7,7],15],[[21,21],15],[[9,9],15],[[2,2],15],[[-1,-2],15,[],[]],[[-1,27],[[3,[28,29]]],[]],[[-1,27],[[3,[28,29]]],[]],[[-1,27],[[3,[28,29]]],[]],[[-1,27],[[3,[28,29]]],[]],[[-1,27],[[3,[28,29]]],[]],[[-1,27],[[3,[28,29]]],[]],[[-1,27],[[3,[28,29]]],[]],[[20,11,11],[[3,[[6,[12]],2]]]],[20,[[3,[[6,[12]],2]]]],[[20,30,30],[[6,[12]]]],[9,13],[9,13],[[7,31],[[3,[13,32]]]],[[21,31],[[3,[13,32]]]],[[22,31],[[3,[13,32]]]],[[33,31],[[3,[13,32]]]],[[9,31],[[3,[13,32]]]],[[9,31],[[3,[13,32]]]],[[2,31],34],[[2,31],34],[[4,31],34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[35,2],[33,2],[-1,-1,[]],[36,2],[-1,-1,[]],[1,[[3,[9,[5,[37,16]]]]]],[[[25,[18]]],[[3,[9,26]]]],[1,[[3,[9,26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[9,11,11,38],13],[[],[[5,[39,16]]]],[9,13],[9,40],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,[[17,[18,16]]]],[9,[[17,[18,16]]]],[9,[[17,[18,16]]]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[-1,12,9],13,[]],[[14,12,9],13],[[4,1],13],[[20,1],13],[[20,12],[[3,[13,2]]]],[[20,12],[[3,[13,2]]]],[-1,1,[]],[14,1],[[],14],[[40,40],9],[[40,40],20],[[1,1,1,1],9],[[40,40,41],9],[[41,11,11],9],[[20,4],[[3,[[6,[12]],2]]]],[[4,20],[[3,[13,2]]]],[[9,40,40],41],[[20,4],[[3,[12,2]]]],[[9,40,40,41],13],[[[25,[4]],[42,[23,9]]],[[3,[20,2]]]],[20,[[3,[13,2]]]],[20,15],[[9,1],[[3,[13,26]]]],[[7,-1],3,43],[[21,-1],3,43],[[22,-1],3,43],[[9,-1],3,43],[[20,-1],3,43],[[2,-1],3,43],[[4,-1],3,43],[[20,23,9],13],[9,44],[20,44],0,[[20,4],[[3,[[6,[12]],2]]]],[[20,1],[[3,[13,2]]]],[[22,[42,[23,9,45]]],[[3,[9,33]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,23,[]],[-1,23,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,46,[]],[-1,46,[]],[-1,46,[]],[-1,46,[]],[-1,46,[]],[-1,46,[]],[-1,46,[]],[-1,46,[]],[-1,46,[]],[20,[[3,[13,2]]]],[20,15],[1,2],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-1]]],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,40],0],"c":[],"p":[[15,"str"],[3,"EngineError",0],[4,"Result",358],[4,"Step",0],[3,"Box",359],[4,"Option",360],[4,"BlendMode",0],[3,"Rectangle",361],[3,"Image",0],[3,"Position",362],[15,"f64"],[15,"usize"],[15,"tuple"],[3,"SoftwareBlender",0],[15,"bool"],[3,"Global",363],[3,"Vec",364],[15,"u8"],[3,"Rgba",365],[3,"Engine",0],[4,"ImageSource",0],[3,"ImageDto",0],[3,"String",366],[8,"Deserializer",367],[15,"slice"],[4,"ImageError",368],[8,"Serializer",369],[3,"Ok",369],[3,"Error",370],[15,"i32"],[3,"Formatter",371],[3,"Error",371],[4,"DtoTransformError",0],[6,"Result",371],[3,"Error",372],[4,"TreeError",373],[8,"Error",374],[15,"u64"],[8,"Blender",0],[15,"u32"],[3,"Color",375],[3,"HashMap",376],[8,"Serializer",377],[3,"Size",378],[3,"RandomState",376],[3,"TypeId",379],[13,"ProjectCreate",357]]},\
"imagine":{"doc":"","t":"NNNEINEDDENNNNNNDLLLLLLLLLLLLKLLLKLKLLLLLLLLLLLLLLKLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLKLKLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Alpha","Base64Decode","Base64Png","BlendMode","Blender","Darken","DtoTransformError","Image","ImageDto","ImageSource","Lighten","Multipart","Network","NoSuchPart","Remove","Screen","SoftwareBlender","approx_from","approx_from","approx_from","approx_from","approx_from","approx_from","approx_into","approx_into","approx_into","approx_into","approx_into","approx_into","blend","blend","blend_all","blend_all","blend_damaged","blend_damaged","blend_damaged_into","blend_damaged_into","blend_pixel","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clean","clean","clean","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","data","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","draw_line","drop","drop","drop","drop","drop","drop","encode_base64","eq","eq","eq","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","flip_horizontally","flip_vertically","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_base64","from_bytes","from_file","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","gaussian_noise","generate_blender","grayscale","height","init","init","init","init","init","init","into","into","into","into","into","into","into_array","into_bytes","into_png_bytes","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","load","load","name","name","new","new","new_four_pixels","new_from_color","new_stamp","pixel","put_pixel","save","serialize","serialize","serialize","serialize","size","src","to_image","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value_from","value_from","value_from","value_from","value_from","value_from","value_into","value_into","value_into","value_into","value_into","value_into","vzip","vzip","vzip","vzip","vzip","vzip","width"],"q":[[0,"imagine"],[228,"core::result"],[229,"common::rectangle"],[230,"common::position"],[231,"core::option"],[232,"alloc::vec"],[233,"image::color"],[234,"serde::de"],[235,"alloc::string"],[236,"image::error"],[237,"erased_serde::ser"],[238,"erased_serde::ser"],[239,"core::fmt"],[240,"core::fmt"],[241,"alloc::boxed"],[242,"common::color"],[243,"serde::ser"],[244,"common::size"],[245,"std::collections::hash::map"],[246,"core::any"]],"d":["source-over","","","","A blender blends multiple images together (composition)","darken","","This struct abstracts the implementation of the actual …","Represents an Image in a way that it can be serialized and …","","lighten","","","","destination-out","screen","","","","","","","","","","","","","","Blends <code>overlay</code> on top of <code>base</code> with the given mode, …","","Blends all given children based on their properties into …","Blends all given children based on their properties into …","Blends the active image on top of the base image by …","","Blends <code>overlay</code> on top of <code>base</code> with the given mode, …","","","","","","","","","","","","","","","Cleans the cache and thus forgets all images that got …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws the stamp image at each position of the track on the …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Creates a new image with the content of the given image …","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Marks that the image with the given marker won’t change …","","Name of the blender","","","Creates a new empty image with the given size.","Creates a 2x2 image using the given color strings (for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[2,26,15,0,0,2,0,0,0,0,2,15,26,26,2,2,0,10,2,15,16,26,4,10,2,15,16,26,4,31,10,31,31,31,10,31,10,10,10,2,15,16,26,4,10,2,15,16,26,4,31,10,4,2,15,16,4,2,15,16,4,16,10,10,2,15,16,26,4,10,2,15,16,26,4,2,15,16,4,4,10,2,15,16,26,4,4,2,15,4,15,2,15,16,4,4,4,2,15,16,26,4,4,10,2,15,16,26,4,4,4,4,10,2,15,16,26,4,4,0,4,4,10,2,15,16,26,4,10,2,15,16,26,4,4,4,4,10,2,15,16,26,4,31,10,31,10,10,4,4,4,4,4,4,4,2,15,16,4,4,16,16,2,15,16,4,4,10,2,15,16,26,4,10,2,15,16,26,4,10,10,2,2,15,15,16,16,26,26,4,4,10,10,2,2,15,15,16,16,26,26,4,4,10,2,15,16,26,4,10,2,15,16,26,4,10,2,15,16,26,4,10,2,15,16,26,4,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[1,[-1]]],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[-1,2,3,[9,[4,5,6,[8,[7]]]],[9,[4,5,6,[8,[7]]]]],4,[]],[[10,2,3,[9,[4,5,6,[8,[7]]]],[9,[4,5,6,[8,[7]]]]],4],[[-1,3,[12,[[9,[2,4,5,6,11,[8,[7]]]]]]],4,[]],[[-1,3,[12,[[9,[2,4,5,6,11,[8,[7]]]]]]],4,[]],[[-1,2,[9,[4,5,6]],[9,[4,5,6]],3],9,[]],[[10,2,[9,[4,5,6]],[9,[4,5,6]],3],9],[[-1,2,3,[9,[4,5]],[9,[4,5,6]],[9,[4,5,6]]],9,[]],[[10,2,3,[9,[4,5]],[9,[4,5,6]],[9,[4,5,6]]],9],[[2,[14,[13]],[14,[13]],6,6],[[14,[13]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,9,[]],[10,9],[[4,3],9],[2,2],[15,15],[16,16],[4,4],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],0,[[],10],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[1,[2]]],17],[-1,[[1,[15]]],17],[-1,[[1,[16]]],17],[-1,[[1,[4]]],17],[[4,4,[18,[5]]],3],[7,9],[7,9],[7,9],[7,9],[7,9],[7,9],[4,[[1,[19,20]]]],[[2,2],11],[[15,15],11],[[4,4],11],[[-1,-2],11,[],[]],[[-1,21],[[1,[22,23]]],[]],[[-1,21],[[1,[22,23]]],[]],[[-1,21],[[1,[22,23]]],[]],[[-1,21],[[1,[22,23]]],[]],[4,9],[4,9],[[2,24],25],[[15,24],25],[[16,24],25],[[26,24],25],[[4,24],25],[[4,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[27,[[1,[4,[29,[28]]]]]],[[[18,[13]]],[[1,[4,20]]]],[27,[[1,[4,20]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,6,6,30],9],[[],[[29,[31]]]],[4,9],[4,32],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,[[12,[13]]]],[4,[[12,[13]]]],[4,[[12,[13]]]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[-1,7,4],9,[]],[[10,7,4],9],[-1,27,[]],[10,27],[[],10],[[32,32],4],[[27,27,27,27],4],[[32,32,33],4],[[33,6,6],4],[[4,32,32],33],[[4,32,32,33],9],[[4,27],[[1,[9,20]]]],[[2,-1],1,34],[[15,-1],1,34],[[16,-1],1,34],[[4,-1],1,34],[4,35],0,[[16,[36,[19,4]]],[[1,[4,26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,19,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,32]],"c":[],"p":[[4,"Result",228],[4,"BlendMode",0],[3,"Rectangle",229],[3,"Image",0],[3,"Position",230],[15,"f64"],[15,"usize"],[4,"Option",231],[15,"tuple"],[3,"SoftwareBlender",0],[15,"bool"],[3,"Vec",232],[15,"u8"],[3,"Rgba",233],[4,"ImageSource",0],[3,"ImageDto",0],[8,"Deserializer",234],[15,"slice"],[3,"String",235],[4,"ImageError",236],[8,"Serializer",237],[3,"Ok",237],[3,"Error",238],[3,"Formatter",239],[6,"Result",239],[4,"DtoTransformError",0],[15,"str"],[8,"Error",240],[3,"Box",241],[15,"u64"],[8,"Blender",0],[15,"u32"],[3,"Color",242],[8,"Serializer",243],[3,"Size",244],[3,"HashMap",245],[3,"TypeId",246]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
